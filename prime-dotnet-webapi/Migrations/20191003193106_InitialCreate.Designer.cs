// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Prime;
using Prime.Models;

namespace Prime.Migrations
{
    [DbContext(typeof(ApiDbContext))]
    [Migration("20191003193106_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Prime.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("AddressType")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<string>("Postal")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<string>("Street")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId", "AddressType")
                        .IsUnique()
                        .HasName("IX_EnrolleeId_AddressType");

                    b.ToTable("Address");

                    b.HasDiscriminator<int>("AddressType");
                });

            modelBuilder.Entity("Prime.Models.Certification", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<short>("CollegeCode")
                        .HasColumnType("smallint");

                    b.Property<int>("EnrolmentId")
                        .HasColumnType("integer");

                    b.Property<short>("LicenseCode")
                        .HasColumnType("smallint");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short?>("PracticeCode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("RenewalDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("CollegeCode");

                    b.HasIndex("EnrolmentId");

                    b.HasIndex("LicenseCode");

                    b.HasIndex("PracticeCode");

                    b.ToTable("Certification");
                });

            modelBuilder.Entity("Prime.Models.College", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("CollegeLookup");

                    b.HasData(
                        new
                        {
                            Code = (short)1,
                            Name = "College of Physicians and Surgeons of BC (CPSBC)"
                        },
                        new
                        {
                            Code = (short)2,
                            Name = "College of Pharmacists of BC (CPBC)"
                        },
                        new
                        {
                            Code = (short)3,
                            Name = "College of Registered Nurses of BC (CRNBC)"
                        },
                        new
                        {
                            Code = (short)4,
                            Name = "None"
                        });
                });

            modelBuilder.Entity("Prime.Models.Enrollee", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ContactEmail")
                        .HasColumnType("text");

                    b.Property<string>("ContactPhone")
                        .HasColumnType("text");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MiddleName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredFirstName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredLastName")
                        .HasColumnType("text");

                    b.Property<string>("PreferredMiddleName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VoiceExtension")
                        .HasColumnType("text");

                    b.Property<string>("VoicePhone")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Enrollee");
                });

            modelBuilder.Entity("Prime.Models.Enrolment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool?>("Approved")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ApprovedReason")
                        .HasColumnType("text");

                    b.Property<string>("DeviceProviderNumber")
                        .HasColumnType("text");

                    b.Property<int>("EnrolleeId")
                        .HasColumnType("integer");

                    b.Property<bool?>("HasCertification")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasConviction")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasDisciplinaryAction")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasPharmaNetSuspended")
                        .HasColumnType("boolean");

                    b.Property<bool?>("HasRegistrationSuspended")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsAccessingPharmaNetOnBehalfOf")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsDeviceProvider")
                        .HasColumnType("boolean");

                    b.Property<bool?>("IsInsulinPumpProvider")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("EnrolleeId");

                    b.ToTable("Enrolment");
                });

            modelBuilder.Entity("Prime.Models.Job", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("EnrolmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EnrolmentId");

                    b.ToTable("Job");
                });

            modelBuilder.Entity("Prime.Models.JobName", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("JobNameLookup");

                    b.HasData(
                        new
                        {
                            Code = (short)1,
                            Name = "Medical Office Assistant"
                        },
                        new
                        {
                            Code = (short)2,
                            Name = "Midwife"
                        },
                        new
                        {
                            Code = (short)3,
                            Name = "Nurse (not nurse practitioner)"
                        },
                        new
                        {
                            Code = (short)4,
                            Name = "Pharmacy Assistant"
                        },
                        new
                        {
                            Code = (short)5,
                            Name = "Pharmacy Technician"
                        },
                        new
                        {
                            Code = (short)6,
                            Name = "Registration Clerk"
                        },
                        new
                        {
                            Code = (short)7,
                            Name = "Ward Clerk"
                        },
                        new
                        {
                            Code = (short)8,
                            Name = "Other"
                        });
                });

            modelBuilder.Entity("Prime.Models.License", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("LicenseLookup");

                    b.HasData(
                        new
                        {
                            Code = (short)1,
                            Name = "Full - General"
                        },
                        new
                        {
                            Code = (short)2,
                            Name = "Full - Pharmacist"
                        },
                        new
                        {
                            Code = (short)3,
                            Name = "Full - Specialty"
                        },
                        new
                        {
                            Code = (short)4,
                            Name = "Registered Nurse"
                        },
                        new
                        {
                            Code = (short)5,
                            Name = "Temporary Registered Nurse"
                        });
                });

            modelBuilder.Entity("Prime.Models.Organization", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EnrolmentId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<short>("OrganizationTypeCode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("EnrolmentId");

                    b.HasIndex("OrganizationTypeCode");

                    b.ToTable("Organization");
                });

            modelBuilder.Entity("Prime.Models.OrganizationName", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("OrganizationNameLookup");

                    b.HasData(
                        new
                        {
                            Code = (short)1,
                            Name = "Vancouver Island Health"
                        },
                        new
                        {
                            Code = (short)2,
                            Name = "Shoppers Drug Mart"
                        });
                });

            modelBuilder.Entity("Prime.Models.OrganizationType", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("OrganizationTypeLookup");

                    b.HasData(
                        new
                        {
                            Code = (short)1,
                            Name = "Health Authority"
                        },
                        new
                        {
                            Code = (short)2,
                            Name = "Pharmacy"
                        });
                });

            modelBuilder.Entity("Prime.Models.Practice", b =>
                {
                    b.Property<short>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Code");

                    b.ToTable("PracticeLookup");

                    b.HasData(
                        new
                        {
                            Code = (short)1,
                            Name = "Remote Practice"
                        },
                        new
                        {
                            Code = (short)2,
                            Name = "Reproductive Care"
                        },
                        new
                        {
                            Code = (short)3,
                            Name = "Sexually Transmitted Infections (STI)"
                        },
                        new
                        {
                            Code = (short)4,
                            Name = "None"
                        });
                });

            modelBuilder.Entity("Prime.Models.MailingAddress", b =>
                {
                    b.HasBaseType("Prime.Models.Address");

                    b.HasIndex("EnrolleeId")
                        .HasName("IX_Address_EnrolleeId");

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("Prime.Models.PhysicalAddress", b =>
                {
                    b.HasBaseType("Prime.Models.Address");

                    b.HasIndex("EnrolleeId")
                        .HasName("IX_Address_EnrolleeId");

                    b.ToTable("Address");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("Prime.Models.Certification", b =>
                {
                    b.HasOne("Prime.Models.College", "College")
                        .WithMany("Certifications")
                        .HasForeignKey("CollegeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Enrolment", "Enrolment")
                        .WithMany("Certifications")
                        .HasForeignKey("EnrolmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.License", "License")
                        .WithMany("Certifications")
                        .HasForeignKey("LicenseCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.Practice", "Practice")
                        .WithMany("Certifications")
                        .HasForeignKey("PracticeCode");
                });

            modelBuilder.Entity("Prime.Models.Enrolment", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithMany("Enrolments")
                        .HasForeignKey("EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prime.Models.Job", b =>
                {
                    b.HasOne("Prime.Models.Enrolment", "Enrolment")
                        .WithMany("Jobs")
                        .HasForeignKey("EnrolmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prime.Models.Organization", b =>
                {
                    b.HasOne("Prime.Models.Enrolment", "Enrolment")
                        .WithMany("Organizations")
                        .HasForeignKey("EnrolmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prime.Models.OrganizationType", "OrganizationType")
                        .WithMany("Organizations")
                        .HasForeignKey("OrganizationTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prime.Models.MailingAddress", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithOne("MailingAddress")
                        .HasForeignKey("Prime.Models.MailingAddress", "EnrolleeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prime.Models.PhysicalAddress", b =>
                {
                    b.HasOne("Prime.Models.Enrollee", "Enrollee")
                        .WithOne("PhysicalAddress")
                        .HasForeignKey("Prime.Models.PhysicalAddress", "EnrolleeId")
                        .HasConstraintName("FK_Address_Enrollee_EnrolleeId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
